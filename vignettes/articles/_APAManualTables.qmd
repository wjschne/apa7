---
title: "Recreating Tables from the APA Manual, 7th Edition"
shorttitle: "APA Tables"
author:
  - name: W. Joel Schneider
    corresponding: true
    orcid: 0000-0002-8393-5316
    email: schneider@temple.edu
    affiliations:
      - name: Temple University
        department: College of Education and Human Development
        address: 1301 Cecil B. Moore Ave.
        city: Philadelphia
        region: PA
        postal-code: 19122-6091
abstract: "The flextable and apa7 packages were used to recreate the sample tables form the APA Manual (7th Edition)."
floatsintext: true
keywords: [APA Style, Tables]
# bibliography: refs.bib
format:
  apaquarto-html: 
    toc: true
execute: 
  cache: true
  message: false
  echo: true
---

```{r}
#| label: setup
#| include: false
library(apa7)
library(flextable)
library(ftExtra)
library(signs)
library(parameters)
library(performance)
library(lme4)
library(dplyr)
library(purrr)
library(tidyr)
library(forcats)
library(stringr)
library(tibble)
set_flextable_defaults(theme_fun = theme_apa, 
                       font.family = "Times New Roman")

```

When I write a research manuscript in APA style, I have twin goals that are sometimes at odds: 1) I want the document to be fully reproducible, including the tables. 2) I want the formatting to be not only correct but aesthetically pleasing.

The final frontier of reproducibility in APA style, for me, has been getting the tables right. At long last, I am getting close to where I want to be. My process usually goes like this:

1. Perform analyses.
2. Wrangle data with tidyverse functions.
3. Create a with `flextable`.
4. Eliminate tedious formatting with apa7 functions (e.g,. `apa_style`).
5. Add specific formatting and finishing touches with flextable functions.

# Sample Tables from the APA Manual

As an exercise, I decided to reproduce most of the sample tables in the APA Manual's Chapter 7, which covers the display of tables. There are a number of differences between the original tables and the recreated tables. 

* I stick with Times New Roman as my font. 
* I add little breaks between groupings in multilevel headers.
* I align decimals where possible. 

Things I usually change, but I do not mess with here:

* I like column headings to have the same alignment as the body cells under them---if the cell is left justified, I want the header to be left justified. However, APA style usually has centered headings for everything.
* Hanging indents are useful sometimes, but I try to avoid them when they make the columns appear uneven. Some of the tables have hanging indents that could have been avoided, but I put them in anyway.

<hr>

## APA Table 7.1

:::{.callout-note}
# Highlights

* Separation of column headers with `add_break_columns`
* Row titles and styling with `apa_flextable`
* Conditional placement of cell borders with `flextable::surround`
* General notes with `flextable::add_footer_lines` or `apa-note` chunk option
* Footnotes with `flextable::footnote`
:::

![Screenshot of the *APA Manual*'s Table 7.1](table71.png){#fig-71}

To recreate the data for the table in @fig-71 requires a fair bit of work, most of which is not relevant to the display of the table. @tbl-71a displays the data in its raw form. I used flextable's `theme_apa` (via `set_flextable_defaults`) to get the basic formatting to be consistent with APA format.

```{r}
#| label: tbl-71a
#| tbl-cap: Raw Table
#| echo: true
<<setup>>

# Make and format data
d_citizenship <- crossing(
  Wave = 1:2,
  Citizenship = fct_inorder(c("With", "Without")),
  Gender = fct_inorder(c("Girls", "Boys")),
  Grade = 3:5
) |>  
  mutate(n = as.integer(
    c(111, 297, 301, 
      281, 290, 306, 
      240, 251, 260, 
      232, 264, 221,
      201, 214, 221,
      210, 236, 239,
      189, 194, 216, 
      199, 210, 213))) |> 
  arrange(Gender, Citizenship) |>
  unite(Gender_Citizenship, Gender, Citizenship) |>
  pivot_wider(names_from = Gender_Citizenship,
              values_from = n,
              names_vary = "slowest") |>
  mutate(Grade = factor(Grade)) %>%
  bind_rows(
    ., 
    summarise(
      ., 
      across(where(is.numeric), 
             .fns = sum), 
      .by = Wave) |> 
      mutate(Grade = factor("Total"))) |>
  arrange(Wave, Grade) 


flextable(d_citizenship)

```

However, @tbl-71a requires additional formatting to become publication-worthy. To get a small break between the headers separating the data for girls and boys, flextable has an existing method, but it requires finesse to make it easy. The `add_break_columns` function as a convenient way to add spaces in the column headers. It takes quoted or unquoted column names or any of the [dplyr/tidyselect functions](https://tidyselect.r-lib.org/reference/language.html) (`all_of`, `any_of`, `contains`, `starts_with`, `ends_with`).

```{r}
#| label: raw71
#| echo: true
d_citizenship |>
  add_break_columns("Girls_Without")
```

If there are multiple breaks, it is possible to select all columns with a feature, omitting the first or last column.

```{r}
#| label: raw72
#| echo: true
d_citizenship |>
  add_break_columns(ends_with("_Without"), 
                    omit_last = TRUE)
```

The `apa_flextable` function has two purposes. First, it processes the break columns differently for the docx format so that the breaks do not collapse to zero-width columns. Second, if a `row_title_column` is specified, the data are reconfigured to have row titles merged and centered (via `flextable::as_grouped_data` and additional formatting). The `apa_flextable` function, by default, calls the `apa_style` function for further processing and styling, though it can be turned off by setting the `apastyle` argument to `FALSE`.

The `flextable::surround` function can place cell borders selectively by row (or column). @tbl-preliminary71 is close to the final result, but additional notes are needed.

```{r}
#| label: tbl-preliminary71
#| echo: true
ft_71 <- d_citizenship |>
  add_break_columns(Girls_Without) |> 
  apa_flextable(row_title_column = "Wave", 
                row_title_prefix = "Wave",
                line_spacing = 1.5, 
                table_width = 1) |> 
  surround(i = ~ Grade == "Total",
           border.top = list(color = "gray", 
                             width = 1, 
                             style = "solid")) 
ft_71
```

The `apa_flextable` function does not delete the column specified in `row_title_column` (i.e., `Wave`), but it does remove it from display. An additional hidden column called `row_title` has data in the row titles but is `NA` in other rows. Both columns are available for programmatic formatting the row titles and row groupings. For example, here I bold the row titles and make all the Wave 3 text blue and with Arial font. In documents where deviations from strict APA style are allowed, such stylings can be useful to highlight a point.

```{r}
#| label: tbl-preliminary72
#| echo: true
ft_71 |> 
  style(i = ~ Wave == 2,
                   pr_t = officer::fp_text(
                     color = "dodgerblue", 
                     font.family = "Arial")) |>
  bold(i = ~ !is.na(row_title))

```

### Tables Notes

APA style distinguishes between three types of table notes, each of which need to be in separate paragraphs:

* *General Note.* Contains definitions, abbreviations, and other information needed to understand the table, as well as copyright information.
* *Specific Note.* These are notes about specific cells in the table, often in form of footnotes with lowercase letters as markers. Each footnote is in the same paragraph. The *APA Manual* recommends making the the footnote marker in superscript. The space that separates the marker from the the explanatory text should also be in superscript, hence the non-breaking space `^\u00A0^` at the beginning of th footnote text.
* *Probability Note.* This note explains the meanings of probability markers (e.g., \* *p* \< .05; \*\* *p* \< .001; \*\*\* *p* \< .001).

### Adding Table Notes with flextable

Adding footnotes with flextable functions might look like a lot of code in @tbl-71b, but it is mostly straightforward.

The general note can be created with the `footer_lines` function. The note itself can be written inside `flextable::as_paragraph` or `ftExtra::as_paragraph_md`. The `ftExtra::as_paragraph_md` function can make moderately complex formatting a little easier because it uses markdown syntax. If precise fine-tuning is needed, the flextable package has many formatting functions that can be used inside `flextable::as_paragraph`.

Getting everything to display in *perfect* APA style is not always possible with the `footer` function. The footnotes are supposed to go in a single paragraph that is separate from the general note. We can make footnotes appear in their own paragraph by setting the `inline` argument in `footer` to `TRUE`, but this makes the general note also in the same paragraph.

I did not use the `footer` function to create the probability note because I did not want the asterisk to be in superscript. Instead the asterisk is placed in the table with the `append_chunk` function, and the probability note is added separately with the `footer_lines` function.

```{r}
#| label: tbl-71b
#| tbl-cap: Numbers of Children With and Without Proof of Parental Citizenship
#| echo: fenced

d_citizenship |>
  add_break_columns(Girls_Without) |> 
  apa_flextable(row_title_column = "Wave", 
                row_title_prefix = "Wave", 
                line_spacing = 1.5) |>
  surround(i = ~ Grade == "Total",
                      border.top = list(color = "gray", 
                                        width = 1, 
                                        style = "solid")) |> 
  add_footer_lines(
  as_paragraph_md(
    "*Note*. This table demonstrates the elements of a
    prototypical table. A *general note* to a table appears
    first and contains information needed to understand the
    table, including definitions of abbreviations (see Sections
    7.14–7.15) and the copyright attribution for a reprinted or
    adapted table (see Section 7.7)."
  )
) |>
footnote(
  i = ~ Wave == 1 &
    Grade == 3,
  j = "Girls_With",
  value = as_paragraph_md(
    "^\u00A0^A *specific note* appears in a separate 
      paragraph below the general note. "),
  ref_symbols = "a"
) |>
  footnote(
  i = ~ Wave == 1 &
    Grade == 3,
  j = "Girls_Without",
  value = as_paragraph_md(
    "^\u00A0^Subsequent specific notes follow in the 
    same paragraph (see Section 7.14)."),
  ref_symbols = "b", 
  inline = TRUE, 
  sep = ""
) |>
add_footer_lines(
  values = as_paragraph_md(
    "\\* A *probability note* (for *p*-values) appears as a 
    separate paragraph below any specific notes; subsequent 
    probability notes follow in the same paragraph (see 
    Section 7.14)."
    )) |>
  append_chunks(
    i = ~ Wave == 2 & Grade == "Total",
    j = "Boys_With", 
    as_chunk("*")) |> 
  line_spacing(space = 1.5, part = "footer")


```

### Adding Table Notes with apaquarto's `apa-note` Chunk Option

In some formats (e.g., .pdf), long table notes can mess with the column widths and make the table unreadable.

If you are rendering with the apaquarto extension, you can append table notes with the `apa-note` chunk option. After version 5.0.2, apaquarto can separate `apa-note` text into multiple paragraphs as shown in the chunk below.

Also, it bothers me that the footnote symbols mess up the number alignment. I decided to add them in myself. In the same columns that have footnotes, I padded the numbers that do not have footnotes with the `numbsp;` character (Figure Space) to maintain the alignment. 

As a final polishing move, I rejiggered the column widths to make everything center correctly.

```{r}
#| label: tbl-71c
#| tbl-cap: Numbers of Children With and Without Proof of Parental Citizenship
#| apa-note: 
#|   - This table demonstrates the elements of a prototypical 
#|     table. A *general note* to a table appears first and 
#|     contains information needed to understand the table, 
#|     including definitions of abbreviations (see Sections 
#|     7.14--7.15) and the copyright attribution for a 
#|     reprinted or adapted table (see Section 7.7).
#|   - ^a^ Subsequent specific notes follow in the same 
#|     paragraph (see Section 7.14). ^b^ Subsequent specific 
#|     notes follow in the same paragraph (see Section 7.14).
#|   - \* A *probability note* (for *p* values) appears as a 
#|     separate paragraph below any specific notes; subsequent 
#|     probability notes follow in the same paragraph (see 
#|     Section 7.14).
#| echo: fenced

d_citizenship |>
  add_break_columns(Girls_Without) |> 
  mutate(Girls_With = paste0(
    Girls_With, 
    ifelse(Wave == 1 & Grade == 3, 
           "^a^", 
           "^&numsp;^")),
    Girls_Without = paste0(
    Girls_Without, 
    ifelse(Wave == 1 & Grade == 3, 
           "^b^", 
           "^&numsp;^")),
    Boys_With = paste0(
    Boys_With, 
    ifelse(Wave == 2 & Grade == "Total", 
           "^\\*^", 
           "^&numsp;^"))
    ) |> 
  apa_flextable(row_title_column = "Wave", 
                row_title_prefix = "Wave", 
                table_width = 1, 
                line_spacing = 1.5, 
                layout = "fixed") |> 
  width(width = c(1.34, 1.28, 1.28, .05, 1.28, 1.28)) 

```

<hr>

## APA Table 7.2

:::{.callout-note}
# Highlights

* Hanging indents with the `hanging_indent`
* Conditional indentation with `padding`
* Decimal alignment with `align_chr`
:::

@fig-72 Shows some demographic summary data. Getting the data into the proper shape took a fair amount of code, but such data wrangling is not the point of this tutorial. The part that was tricky was getting the text wrapping and hanging indentation right. 

### Hanging Indentation

Indentation is usually easy with flextable's `padding` function. Here, some columns needed indentation, some hanging indentation, and some needed both. The best solution I found was to seize control of the formatting using `stringr::str_wrap` to find where to break the lines and then markdown (`\\` to make new lines, and `\u00A0`, the figure space, to indent). The `hanging_indent` function implements these steps automatically.

### Decimal Alignment

To my eye, numeric text often looks better when decimal aligned. The `align_chr` function allows text to be centered within a column and yet still aligned on the decimal (or any other character). By default, it pads the numeric vector with the figure space (`&numsp;` or `\u2007`) character, which is as wide as an integer.

Does flextable already have decimal alignment? [Yes](https://github.com/davidgohel/flextable/issues/549#issuecomment-1961765244)! However, its method requires the user to supply the position of a decimal tab within the column, which may require a fair bit of trial and error. Of course, if you need decimal alignment somewhere other than in the center of a column, the flextable method is the best option. 

![Screenshot of the *APA Manual*'s Table 7.1](table72.png){#fig-72 width="100%"}

```{r}
#| label: tbl-72
#| tbl-cap: Sociodemographic Characteristics of Participants at Baseline
#| apa-note: 
#|   - "*N*&nbsp;=&nbsp;150 (*n*&nbsp;=&nbsp;50 for each condition). Participants 
#|      were on average 39.5 years old (SD&nbsp;=&nbsp;10.1), and 
#|      participant age did not differ by condition."
#|   - "^a\u00A0^Reflects the number and percentage of
#|      participants answering “yes” to this question."
#| echo: fenced

# Make data
d <- tibble(
  Variable = c(
    "Gender","Gender", "Marital status",
    "Marital status","Marital status",
    "Marital status","Children","Children",
    "Cohabiting", "Cohabiting","Highest educational level",
    "Highest educational level","Highest educational level",
    "Employment","Employment","Employment","Employment",
    "Employment","Previous psychological treatment",
    "Previous psychological treatment",
    "Previous psychotropic medication",
    "Previous psychotropic medication"),
  Group = c(
    "Female","Male","Single","Married/partnered",
    "Divorced/widowed","Other", "Yes","No","Yes","No",
    "Middle school", "High school/some college",
    "University or post-graduate degree",
    "Unemployed","Student","Employed",
    "Self-employed","Retired","Yes","No","Yes","No"),
    `Guided self-help` = c(
      25L, 25L, 13L, 35L, 1L, 1L, 26L, 24L, 37L, 13L,
      0L, 22L, 27L, 3L, 8L, 30L, 9L, 0L, 17L, 33L, 6L, 44L),
  `Unguided self-help` = c(
    20L, 30L, 11L, 38L, 1L, 0L, 26L, 24L, 36L, 14L, 1L,
    17L, 30L, 5L, 7L, 29L, 7L, 2L, 18L, 32L, 13L, 37L),
   `Wait-list control` = c(
     23L, 27L, 17L, 28L, 4L, 1L, 22L, 28L, 26L, 24L, 
     1L, 13L, 32L, 2L, 3L, 40L, 5L, 0L, 24L, 26L, 11L, 39L)
) 

# format data
d <- d |> 
  pivot_longer(-c(Variable, Group), 
               values_to = "n") |>
  mutate(`%` = round(100  * n / sum(n)), 
         .by = c(Variable, name)) |>
  mutate(`Full sample_n` = sum(n),
         .by = c(Variable, Group)) |>
  pivot_wider_name_value(values_from = c(n , `%`)) |> 
  apa7::add_break_columns(ends_with("%")) |>
  relocate(`Full sample_n`, .after = last_col()) |>
  mutate(
    `Full sample_%` = 100 * `Full sample_n` /
      sum(`Full sample_n`),
    .by = c(Variable)
  ) |>
  filter(Group !=  "No") |>
  mutate(Group = ifelse(
    Group == "Yes", 
    paste0(Variable, "^a^"), Group) |>
      hanging_indent(width = 22)) |>
  rename(`Baseline\ncharacteristic` = Group) |> 
  mutate(across(c(ends_with("_\\*n\\*"), 
                  ends_with("_%")), 
                .fns = \(x) align_chr(x, accuracy = .1)))

# Make table
d |> 
  apa_flextable(
    row_title_column = "Variable",
    row_title_border = NA,
    row_title_align = "left",
    table_width = 1, 
    line_spacing = 1.5, 
    layout = "fixed", 
    horizontal_padding = 0, 
    auto_format_columns = T,
    font_size = 10.5
  ) |>
  align(j = 1, align = "left") |>
  width(width = c(1.55, rep(c(.6, .6, .05), 4)[-12]))
```

<hr>

## APA Table 7.3

:::{.callout-note}
# Highlights

* Trim leading zeros with `signs`
* Align on en-dash (–)

:::

![Screenshot of the *APA Manual*'s Table 7.3](table73.png){#fig-73 width="100%"}

APA Manual Table 7.3 in @fig-73 was much easier to reproduce than Table 7.2. Because only simple indentation was required, it was easy to indent subscale rows in @tbl-73 with the `padding` function. The `signs` function not only gives negative numbers a true minus sign, but also can trim leading zeroes for probabilities, correlations, and reliability coefficients.

Whereas the mean and standard deviation columns needed decimal alignment, the Range column looked better if aligned on the en-dash character (–).

```{r}
#| label: tbl-73
#| echo: fenced
#| tbl-cap: Sociodemographic Characteristics of Participants at Baseline
#| apa-note: "The *Diagnostic and Statistical Manual of Mental Disorders* 
#|           (5th ed.) Levels of Personality Functioning Questionnaire 
#|           (DLOPFQ) we developed had four scales (Identity, Self-
#|           Directedness, Empathy, and Intimacy), each with subscales 
#|           for the work and social domains."

# Make data
d <- tibble::tribble(
                           ~Scale,    ~M,  ~SD,   ~Range, ~`cronbach`,
           "Identity total score",  86.6,   28, "28–155",                0.94,
                  "Work Identity",  41.6, 13.3,  "16–76",                0.88,
                "Social Identity",    45, 15.7,  "14–84",                0.91,
  "Self-Directedness total score",  91.2, 26.5, "34–151",                0.92,
         "Work Self-Directedness",  44.9, 13.5,  "16–76",                0.85,
       "Social Self-Directedness",  46.3, 14.3,  "17–80",                0.86,
            "Empathy total score", 101.8, 15.8, "48–139",                0.84,
                   "Work Empathy",  49.9,  8.2,  "20–72",                0.72,
                 "Social Empathy",  51.9,  8.6,  "28–76",                0.77,
           "Intimacy total score", 122.9, 28.6, "56–189",                0.91,
                  "Work Intimacy",  61.7, 14.3,  "28–94",                0.82,
                "Social Intimacy",  61.2, 15.4,  "24–96",                0.86
  ) 

# Format data
d <- d |> 
  mutate(Range = align_chr(Range, center = "–")) 

# Make table
d |>
  apa_flextable(layout = "fixed") |> 
  padding(j = 1, 
          i = ~!stringr::str_ends(Scale, "total score"), 
          padding.left = 20) |> 
  width(width = 1.1) |> 
  width(j = 1, 2.1)
```

<hr>

## APA Table 7.4

I skipped APA Manual Table 7.4 because it is simple and is not entirely visible. It merely shows repeated headers across pages, which is not relevant in the html display here. Tables made in flextable have repeated headers by default when rendered to .docx.

## APA Table 7.5

![Screenshot of the *APA Manual*'s Table 7.5](table75.png){#fig-75 width="100%"}

Reproducing APA Manual Table 7.5 shown in @fig-75 is mostly straightforward. The main trick was to indent all rows that were not row titles.

```{r}
#| label: tbl-75
#| echo: fenced
#| tbl-cap: Summary of Designs of Experiments 1–4
#| apa-note: "A, X, Y, and B&nbsp;=&nbsp;tone, clicker, 
#|           steady light, and flashing light, respectively 
#|           (counterbalanced), with the constraint that 
#|           A and B are drawn from one modality and X and 
#|           Y from another (counterbalanced); plus sign 
#|           (+)&nbsp;=&nbsp;shock to floor of 
#|           rat chamber; minus sign 
#|           (–)&nbsp;=&nbsp;absence of shock."

# Make data
d <- tibble(
     Experiment = rep(1:4, c(2,3,2,3)),
          Group = c("Compound","Compound novel",
                    "Compound A","Compound X","Compound novel",
                    "Compound","Element",
                    "Control","Element A","Element Y"),
  `Preexposure 1` = c("A−X−Y−","A−X−Y−",
                    "A−X−Y−","A−X−Y−","A−X−Y−",
                    "A−X−Y−","A−X−Y−"
                    ,NA,"A−X−Y−","A−X−Y−"),
  `Preexposure 2` = c("AX−BY−","AX−BY−",
                    "AX−BY−","AX−BY−","AX−BY−",
                    "AX−Y−","AX−Y−",
                    NA,"A−X−Y−","A−X−Y−"),
   Conditioning = c("X+","Y+",
                    "A+","X+","Y+",
                    "X+","Y+",
                    "A+/Y+","A+","Y+"),
           Test = c("X−","Y−",
                    "A−","X−","Y−",
                    "X−","Y−",
                    "A−Y−","A−","Y−")
) 

# Make table
d |> 
  apa_flextable(row_title_column = "Experiment", 
                row_title_prefix = "Experiment", 
                row_title_align = "left",
                layout = "fixed", 
                line_spacing = 1.5) |> 
  align(align = "center") |> 
  align(j = 1, align = "left") |> 
  width(width = c(1.7, rep(1.2, 4)))

```

<hr>

## APA Table 7.6

:::{.callout-note}
# Highlights

* Centering text on a space rather than a decimal with `align_chr`

:::

![Screenshot of the *APA Manual*'s Table 7.6](table76.png){#fig-76 width="100%"}

To simply enter the data from this table would be a straightforward process. To make things interesting, I am going simulate data from the group means and standard deviations, run a series of t-tests, and display the data. This makes the process much more like what would happen in a real write-up. The means, standard deviations, and *p*-values come from the simulated data, not from @fig-76. Normally non-significant *p*-values would be rounded to 2 digits, but they were rounded to 3 digits using `apa_p`'s `min-digit = 3` parameter.

```{r}
#| label: tbl-76
#| echo: fenced
#| tbl-cap: Means and Standard Deviations of Scores on Baseline Measures
#| apa-note: Standard deviations are presented in parentheses. 
#|           BAS&nbsp;=&nbsp;Behavioral Activation System; 
#|           BAS-T&nbsp;=&nbsp;Behavioral Activation System–Total 
#|           scores from the Behavioral Inhibition System/Behavioral 
#|           Activation System Scales; SR&nbsp;=&nbsp;Sensitivity 
#|           to Reward scores from the Sensitivity 
#|           to Punishment and Sensitivity to Reward Questionnaire; 
#|           BDI&nbsp;=&nbsp;Beck Depression Inventory scores; 
#|           ASRM&nbsp;=&nbsp;Altman Self-Rating Mania Scale scores; 
#|           M-SRM&nbsp;=&nbsp;Modified Social Rhythm Metric 
#|           Regularity scores.
set.seed(12)

# make data
d <- tibble::tribble(
   ~Scale,     ~Group,    ~M,  ~SD,
  "BAS-T",     "High", 46.17, 2.87,
     "SR",     "High", 17.94, 1.88,
    "BDI",     "High",  7.11,  6.5,
   "ASRM",     "High",  6.46, 4.01,
  "M-SRM",     "High", 11.05, 3.36,
  "BAS-T", "Moderate", 37.99, 1.32,
     "SR", "Moderate", 11.52, 1.84,
    "BDI", "Moderate",  6.18, 6.09,
   "ASRM", "Moderate",  5.63, 3.69,
  "M-SRM", "Moderate", 11.76, 2.75
  ) |> 
  mutate(x = map2(M, SD, \(m, s) rnorm(75, mean = m, sd = s))) |>
  unnest(x) |>
  nest(data = -Scale)

# Analyze data
d <- d |> 
  mutate(
    descriptives = map(
      data,
      \(d) select(d, Group, x) |>
        summarise(m = mean(x) , s = sd(x), .by = Group) |>
        mutate(value = paste0(
          scales::number(m, accuracy = .01),
          " (",
          scales::number(s, accuracy = .01),
          ")"
        )) |>
        select(-c(m, s)) |>
        mutate(Group = paste0(Group, " BAS group")) |> 
        pivot_wider(names_from = Group)
    ),
    p = map_dbl(data, \(d) {
      t.test(x ~ Group, data = d)$p.value 
    }),
  ) |>
  select(-data) |>
  unnest(descriptives)

# Format data
d <- d |> 
  mutate(across(-c(Scale), \(x) align_chr(x, center = " "))) |> 
  apa_format_columns(accuracy = .001)

# Make table
d |> 
  apa_flextable(table_width = 1, 
                layout = "fixed", 
                line_spacing = 1.5) |>
  width(width = rep(6.5 / 4, 4))


```

<hr>

## APA Table 7.7

![Screenshot of the *APA Manual*'s Table 7.7](table77.png){#fig-77 width="100%"}

```{r}
#| label: tbl-77
#| echo: fenced
#| tbl-cap: "Frequencies and Chi-Square Results for 
#|           Belief Perseverance in Attitudes Toward 
#|           Celebrities (*N*&nbsp;=&nbsp;201)"
# Make data
d <- "
Source                       	Do not believe	Unsure	Believe	chi   
Media reports                	17            	140   	44    	124.75
Family reports               	47            	106   	48    	34.06 
Friends' reports             	42            	112   	47    	45.52 
Caught by media              	19            	82    	100   	54.00 
Celebrity display of behavior	12            	61    	128   	101.22" |>
  readr::read_tsv(show_col_types = FALSE)

# Format data
d <- d |> 
  pivot_longer(-c(Source, chi), values_to = "n") |>
  mutate(name = fct_inorder(name)) |>
  mutate(`%` = scales::number(
    100 * `n` / sum(`n`), 
    accuracy = .01),
    .by = Source) |>
  pivot_wider_name_value(values_from = c(`n`, `%`)) |>
  relocate(chi, .after = dplyr::last_col()) |>
  rename(`&chi;^2^(2)` = chi) |> 
  mutate(across(-Source, align_chr)) |> 
  add_break_columns(ends_with("%"), omit_last = TRUE) |>
  mutate(Source = hanging_indent(Source, width = 18)) 

# Make table
d |> 
  apa_flextable(table_width = 1, layout = "fixed") |>
  footnote(j = "&chi;^2^(2)",
           value = as_paragraph_md("*p* < .001"),
           ref_symbol = "*") |>
  align(align = "center") |>
  align(j = 1, align = "left") |> 
  width(width = c(1.6, rep(c(.65,.65, .05), 3)[-9], .9))
```

<hr>

## APA Table 7.8

![Screenshot of the *APA Manual*'s Table 7.8](table78.png){#fig-78 width="100%"}

If it were simply a matter of copying the text into the table, this would be fairly simple. However, in a real analysis, the text does not come pre-formatted. Thus, I simulated the data first, and then proceeded as if I had to conduct the t-tests and report the results from scratch. For this one, the trick is to get the rounding right for the means and standard deviations. Each row is on a different scale, and needs different rounding rules. The easiest way I could do this was to first apply regular rounding with `round` and then round to a set number of significant digits with `formatC`.

Normally, I would respect the direction of the effect, but @fig-78 makes *t* and Cohen's *d* positive for all three rows despite the change in direction for the middle row.

```{r}
#| label: tbl-78
#| tbl-cap: Results of Curve-Fitting Analysis Examining the 
#|          Time Course of Fixations to the Target
#| apa-note: "For each participant, the logistic function was 
#|           fit to target fixations separately. The maximum 
#|           asymptote is the asymptotic degree of looking at 
#|           the end of the time course of fixations. The 
#|           crossover point is the point in time the function 
#|           crosses the midway point between peak and baseline. 
#|           The slope represents the rate of change in the 
#|           function measured at the crossover. Mean parameter 
#|           values for each of the analyses are shown for the 
#|           9-year-olds (*n*&nbsp;=&nbsp;24) and 16-year-olds (*n*&nbsp;=&nbsp;18), 
#|           as well as the results of t tests (assuming unequal 
#|           variance) comparing the parameter estimates between 
#|           the two ages."
#| echo: fenced
set.seed(8)

# Make data
d <- tibble::tribble(
                      ~`Logistic Parameter`, ~Age,    ~M,    ~SD,
          "Maximum asymptote, proportion",   9L, 0.843,  0.135,
                       "Crossover, in ms",   9L,   759,     87,
  "Slope, as change in proportion per ms",   9L, 0.001,  .0002,
          "Maximum asymptote, proportion",  16L, 0.877,  0.082,
                       "Crossover, in ms",  16L,   694,     42,
  "Slope, as change in proportion per ms",  16L, 0.002,  .0002
  ) |> 
  mutate(n = ifelse(Age == 9L, 24, 18)) |> 
  mutate(x = pmap(list(M, SD, n), 
                  \(M, SD, n) rnorm(n, M, SD))) |> 
  select(data = -c(M,SD, n)) |> 
  unnest(x) |> 
  nest(data = -`Logistic Parameter`) 

# Analyze data
d <- d |> 
  mutate(t_fit = map(data, \(d) t.test(
    x ~ Age, data = d)),
         cohen = map(data, \(d) effectsize::cohens_d(
           x ~ Age, 
           data = d))) |> 
  unnest(cohen)

# Format data
d <- d |> 
  select(-starts_with("CI")) |> 
  mutate(`*t*(40)` = map_dbl(t_fit, "statistic") |> 
           abs() |> 
           signs(accuracy = .001), 
         `*p*` = map_dbl(t_fit, "p.value") |> 
           apa_p(min_digits = 3),
         .before = Cohens_d) |> 
  select(-t_fit) |> 
  mutate(data = pmap(
    list(d = data, 
         round_digits = c(3, 0, 4),
         sig_digits = c(3, 3, 1)), 
    \(d, round_digits, sig_digits) {
      d |> 
        summarise(M = mean(x), 
                  SD = sd(x),
                  .by = Age) |> 
        mutate(across(c(M, SD), \(x) {
          round(x, round_digits) |> 
            formatC(digits = sig_digits) |> 
            trimws() |> 
            str_remove("^0")
          }))
  })) |> 
  unnest(data) |> 
  mutate(Age = paste0(Age, "-year-olds"), 
         Cohens_d = signs(abs(Cohens_d), 
                                 accuracy = .001)) |> 
  pivot_wider_name_value(
    values_from = c(M, SD), 
    names_from = Age) |> 
  select(`Logistic Parameter`, 
         contains("olds"), 
         everything()) |> 
  add_break_columns(`9-year-olds_SD`) |> 
  mutate(`Logistic Parameter` = hanging_indent(`Logistic Parameter`)) |> 
  mutate(across(`*t*(40)`:Cohens_d, align_chr))


# Make table
d |> 
  apa_format_columns() |> 
  mutate(across(contains("olds"), stringr::str_trim)) |> 
  apa_flextable(table_width = 1, auto_format_columns = FALSE) |> 
  align(j = 1, align = "left") |> 
  italic(i = 1, part = "header")

```

<hr>

## APA Table 7.9

![Screenshot of the *APA Manual*'s Table 7.9](table79.png){#fig-79 width="100%"}

```{r}
#| label: tbl-79
#| tbl-cap: "Analyses for the Interaction of Professor 
#|           Type and Timing of Response on Perceptions 
#|           of Professor Traits"
#| apa-note: "Means with different subscripts differ at 
#|            the *p*&nbsp;=&nbsp;.05 level by Duncan’s 
#|            new multiple range test."
#| echo: fenced

# Descriptives
d_mean <- "
Professor trait   	Semester	Type     	Mean	Subscript
Dedicated         	End     	Typical  	4.71	b        
Easy to understand	End     	Typical  	3.06	c        
Fair              	End     	Typical  	4.00	b        
Manipulative      	End     	Typical  	1.47	a        
Insensitive       	End     	Typical  	2.06	b        
Dedicated         	End     	Effective	4.79	b        
Easy to understand	End     	Effective	4.89	a        
Fair              	End     	Effective	4.26	b        
Manipulative      	End     	Effective	1.63	a        
Insensitive       	End     	Effective	1.53	c        
Dedicated         	Start   	Typical  	4.15	c        
Easy to understand	Start   	Typical  	3.23	c        
Fair              	Start   	Typical  	3.73	c        
Manipulative      	Start   	Typical  	1.73	a        
Insensitive       	Start   	Typical  	2.54	a        
Dedicated         	Start   	Effective	5.00	a        
Easy to understand	Start   	Effective	4.43	b        
Fair              	Start   	Effective	4.67	a        
Manipulative      	Start   	Effective	1.24	a        
Insensitive       	Start   	Effective	1.14	c        " |>
	readr::read_tsv() |> 
  suppressMessages()

# Statistics
d_test <- "
Professor trait   	F      	p   	eta2
Dedicated         	19.26  	0.00	0.15
Easy to understand	5.01   	0.03	0.03
Fair              	5.75   	0.02	0.06
Manipulative      	3.92   	0.05	0.05
Insensitive       	8.12   	0.01	0.06" |>
  readr::read_tsv() |> 
  suppressMessages() 

# Format data
d <- d_mean |>
  mutate(Semester = paste0(
    Semester, 
    " of semester\\\nprofessor type")) |>
  mutate(Mean = scales::number(Mean, accuracy = .001),
         Subscript = paste0("~", Subscript, "~")) |>
  unite(Mean, c(Mean, Subscript), sep = "") |>
  unite(Semester, c(Semester, Type)) |>
  pivot_wider(names_from = Semester, 
              values_from = Mean) |>
  left_join(d_test, by = join_by(`Professor trait`)) |>
  mutate(`Professor trait` = hanging_indent(
    `Professor trait`, 
    width = 8)) |> 
  add_break_columns(3)

# custom formatter
my_formatter <-  column_formats()
## change p column's accuracy to 0.001
my_formatter$p@formatter <- my_formatter$p@formatter |> 
  purrr::partial(accuracy = .001)
my_formatter$F@header <- "*F* ratio"

# Make table
apa_flextable(d, 
              table_width = 1, 
              column_formats = my_formatter) 
```

<hr>

## APA Table 7.10

:::{.callout-note}
# Highlights

* Correlation matrices with `apa_cor`

:::

![Screenshot of the *APA Manual*'s Table 7.10](table710.png){#fig-710 width="100%"}

```{r}
#| label: tbl-710
#| tbl-cap: Descriptive Statistics and Correlations for Study Variables
set.seed(1234)

# Descriptives
d <- tibble::tribble(
                     ~Variable,    ~n,    ~M,  ~SD,
    "Internal--external status", 3697L,  0.43, 0.49,
     "Manager job performance", 2134L,  3.14, 0.62,
             "Starting salary", 3697L,  1.01, 0.27,
        "Subsequent promotion", 3697L,  0.33, 0.47,
         "Organization tenure", 3697L,  6.45, 6.62,
    "Unit service performance", 3505L,    85, 6.98,
  "Unit financial performance",  694L, 42.61, 5.86
  )

# Correlations
R <- "
r   	1    	2    	3   	4    	5    	6   	7   
1.00	0.00 	0.00 	0.00	0.00 	0.00 	0.00	0.00
2.00	-0.08	0.00 	0.00	0.00 	0.00 	0.00	0.00
3.00	0.45 	-0.01	0.00	0.00 	0.00 	0.00	0.00
4.00	0.08 	-0.07	0.04	0.00 	0.00 	0.00	0.00
5.00	-0.29	0.09 	0.01	0.09 	0.00 	0.00	0.00
6.00	0.25 	-0.39	0.24	0.08 	0.01 	0.00	0.00
7.00	0.00 	0.03 	0.12	-0.07	-0.02	0.16	0.00" |> 
	readr::read_tsv() |> 
  suppressMessages() |> 
	tibble::column_to_rownames("r") |> 
	as.matrix() |> 
  `dimnames<-`(list(d$Variable, d$Variable)) 

# Make R symmetric and fill diagonal with 1s
R <- (R + t(R)) |> `diag<-`(1)

# Make data
d_t <- mvtnorm::rmvnorm(
  n = max(d$n), 
  mean = deframe(d |> select(Variable, M)),
  sigma = diag(d$SD) %*% R %*% diag(d$SD)) |> 
  as_tibble() |> 
  map2_df(d$n, \(x, n) {
    k <- length(x)
    x[sample(1:k, size = k - n)] <- NA
    x
  }) |> 
  rename_with(hanging_indent, width = 15, indent = 0)

cf <- column_formats()
cf$Variable <- NULL
# Make table
d_t |> 
  apa_cor(
    summary_functions = c("n", "M", "SD"), 
    significance_note = FALSE, 
    p_value = c(.05, .01)) |>   
  # set_table_properties() |> 
  # width(j = "Variable", width = 1.2) |> 
  footnote(
    i = 1, 
    j = "Variable", 
    value = as_paragraph(
      "0 = internal hires and 1 = external hires."), 
    ref_symbols = "a ",
    inline = TRUE, 
    sep = " ") |> 
  footnote(
    i = 3, 
    j = "Variable", 
    value = as_paragraph(
      paste("A linear transformation was performed on",
      "the starting salary values to maintain pay practice",
      "confidentiality. The standard deviation (0.27) can",
      "be interpreted as 27% of the average starting salary",
      "for all managers. Thus, ±1 SD includes a range of",
      "starting salaries from 73% (i.e., 1.00 – 0.27) to",
      "127% (i.e., 1.00 + 0.27) of the average starting",
      "salaries for all managers.")), 
    ref_symbols = "b ", 
    inline = TRUE, 
    sep = " ") |> 
  footnote(
    i = c(6,7), 
    j = "Variable", 
    value = as_paragraph(
      "Values reflect the average across 3 years of data."), 
    ref_symbols = "c ", 
    inline = TRUE, 
    sep = " ") |> 
  add_footer_lines(
    as_paragraph_md(
      "^\\*&numsp;^*p* < .05. ^\\*\\*&numsp;^*p* < .01."))
```

<hr>

## APA Table 7.11

:::{.callout-note}
# Highlights
* The `separate_star_column` function to align numbers with significance stars
:::

![Screenshot of the *APA Manual*'s Table 7.11](table711.png){#fig-711 width="100%"}


This correlation matrix is different above and below the diagonal. A correctable imperfection of the @fig-711 is that the correlations do not align on their decimals due to the minus signs and stars. This can be corrected by separating the correlations from the significance stars with the `separate_star_column` function. This function removes any stars from each selected column and places them in an adjacent column. The `apa_style` function then automatically right aligns the selected columns and left aligns the star columns, and removes any padding between them, giving the illusion that they are in the same column with decimal alignment.

```{r}
#| label: tbl-711
#| tbl-cap: Intercorrelations for Study Variables Disaggregated by Gender
#| apa-note: "The results for the female sample (*n*&nbsp;=&nbsp;199) are shown above the diagonal. The results for the male sample (*n*&nbsp;=&nbsp;120) are shown below the diagonal."

"
Variable             	1    	2    	3    	4
Grade point average  	—    	.49**	.35**	−.05
Academic self-concept	.35**	—    	.36**	.02
Teacher trust        	.49**	.35**	—    	.20**
Age                  	.10  	.21* 	−.15 	—" |>
  readr::read_tsv() |>
  suppressMessages() |>
  separate_star_column(-Variable) |>
  apa_flextable(
    table_align = "left", 
    layout = "fixed", 
    table_width = 1) |>
  width(j = 1, width = 2) 

```

<hr>

## APA Table 7.12

![Screenshot of the *APA Manual*'s Table 7.12](table712.png){#fig-712 width="100%"}

```{r}
#| label: tbl-712
#| tbl-cap: Means, Standard Deviations, and One-Way Analyses of Variance in Psychological and Social Resources and Cognitive Appraisals

# Make data
d <- "
Measure             	Urban_M	Urban_SD	Rural_M	Rural_SD	*F*(1, 294)	&eta;^2^
Self-esteem         	2.91     	0.49      	3.35     	0.35      	68.87      	0.19    
Social support      	4.22     	1.50      	5.56     	1.20      	62.60      	0.17    
Cognitive appraisals	 NA      	 NA       	 NA      	 NA       	 NA        	 NA     
Threat              	2.78     	0.87      	1.99     	0.88      	56.35      	0.20    
Challenge           	2.48     	0.88      	2.83     	1.20      	7.87       	0.03    
Self-efficacy       	2.65     	0.79      	3.53     	0.92      	56.35      	0.16    " |>
  readr::read_tsv() |>
  suppressMessages()


# Format data
d <- d |> 
  mutate(across(
    -(Measure:`Rural_SD`), 
    \(x) align_chr(
      x,
      trim_leading_zeros = TRUE, 
      accuracy = .01))) |> 
  add_break_columns(`Urban_SD`)

# Make table
d |> 
  apa_flextable(table_width = 1,
                layout = "fixed") |> 
  padding(i = 4:6, j = 1, padding.left = 20) |> 
  footnote(i = (1:6)[-3],
           j = "*F*(1, 294)", 
           ref_symbols = "***", 
           value = as_paragraph_md("*p* < .001.")) |> 
  width(width = c(1.65, .8, .8, .05, .8, .8, .9, .7))
```

<hr>

## APA Table 7.13

![Screenshot of the *APA Manual*'s Table 7.13](table713.png){#fig-713 width="100%"}


```{r}
#| label: tbl-713
#| tbl-cap: Means, Standard Deviations, and Two-Way ANOVA for Study Variables
#| apa-note:
#|   - "*N*&nbsp;=&nbsp;153. ANOVA&nbsp;=&nbsp;analysis of variance; SMT&nbsp;=&nbsp;stress management training group; Control&nbsp;=&nbsp;wait-list control group; G&nbsp;=&nbsp;group; T&nbsp;=&nbsp;time."
#|   - "^\\*&nbsp;^*p* < .05. ^\\*\\*&nbsp;^*p* < .01. "
set.seed(6)

# Make data
d <- "
v                   	Time	Group  	M   	SD  
Psychological strain	1.00	SMT    	0.24	0.30
Psychological strain	2.00	SMT    	0.16	0.27
Psychological strain	3.00	SMT    	0.16	0.26
Psychological strain	1.00	Control	0.22	0.29
Psychological strain	2.00	Control	0.27	0.32
Psychological strain	3.00	Control	0.26	0.31
Emotional exhaustion	1.00	SMT    	2.82	1.47
Emotional exhaustion	2.00	SMT    	2.55	1.31
Emotional exhaustion	3.00	SMT    	2.36	1.39
Emotional exhaustion	1.00	Control	2.50	1.25
Emotional exhaustion	2.00	Control	2.47	1.28
Emotional exhaustion	3.00	Control	2.43	1.16
Depersonalization   	1.00	SMT    	1.20	1.09
Depersonalization   	2.00	SMT    	1.13	1.07
Depersonalization   	3.00	SMT    	1.00	0.93
Depersonalization   	1.00	Control	1.12	1.05
Depersonalization   	2.00	Control	1.25	1.16
Depersonalization   	3.00	Control	1.24	0.93" %>%
	readr::read_tsv() |> 
  suppressMessages() |> 
  mutate(n = ifelse(Group == "SMT", 75, 78)) |> 
  mutate(x = pmap(list(mean = M, 
                          sd = SD,
                          n = n),
                     rnorm)) |> 
  select(-c(M, SD, n)) |> 
  unnest(x) |> 
  mutate(id = factor(row_number()), .by = c(v, Time)) |> 
  nest(data = -v) 

# Analyze data
d <- d |> 
  mutate(descriptives = map(data, \(d) {
    d |> 
      summarise(M = mean(x),
                SD = sd(x), 
                .by = c(Group, Time)) |> 
      pivot_wider_name_value(
        names_from = Group,
        values_from = c(M, SD)) |> 
      mutate(Time = paste("Time", Time))
  }),
         fit = map(data, 
                   \(d) {
                     aov(x ~ Group * Time + Error(id), 
                         data = d)
                     }),
         eta = map(fit, effectsize::eta_squared) |> 
           map(\(d) dplyr::select(
             d, Parameter, Eta2_partial) |> 
                 as_tibble()),
         mp = map(fit, parameters::model_parameters) |> 
           map(\(d) dplyr::select(
             d, Group, Parameter, `F`, df, p) |> 
                 as_tibble() |> 
                 mutate(df2 = sum(
                   ifelse(Parameter == "Residuals", df, 0)), 
                        .by = Group) |> 
                 dplyr::filter(Parameter != "Residuals") |> 
                 unite(df, c(df, df2), sep = ", ") |> 
           dplyr::select(-Group)),
         Ftest = map2(mp, eta, \(m, e) {
           left_join(m, e, by = join_by(Parameter)) |>
             mutate(Parameter = factor(
               Parameter,
               levels = c("Group", "Time", "Group:Time"),
               labels = c("G", "T", "G \u00D7 T"))) |>
             rename(Effect = Parameter)
         })
) 

# Format data
d <- d |> 
  dplyr::select(v, descriptives, Ftest) |> 
  unnest(c(descriptives, Ftest)) |> 
  rename(Variable = Time) |> 
  mutate(`F` = align_chr(`F`, 
                                 accuracy = .01),
         `papa7starcolumn` = p2stars(p, superscript = TRUE), 
         .after = `F`) |>
  unite(`*F* ratio`, c(`F`, papa7starcolumn), sep = "") |> 
  mutate(`*F* ratio` = star_balance(`*F* ratio`)) |> 
  select(-p) |> 
  rename_with(\(x) paste0("ANOVA_",x),.cols = Effect:Eta2_partial) |> 
  add_break_columns(ends_with("SD"))


# Make table
d |> 
  apa_flextable(row_title_column = "v", 
                row_title_align  = "left",
                layout = "fixed", 
                line_spacing = 1.5) |> 
  width(j = 1, width = 1.5) 
```

<hr>

## APA Table 7.14

:::{.callout-note}
# Highlights

* Aligning to only the left side of a decimal using the `side` parameter of the `align_chr` function
* Bold markdown with `bold_md`
* Use of non-breaking space (`&nbsp;`) to prevent markdown from treating numbered text as ordered lists

:::

![Screenshot of the *APA Manual*'s Table 7.14](table714.png){#fig-714 width="100%"}

The PCAT items have row titles, have hanging indents, and are decimal aligned. This kind of formatting is not too hard in MS Word, but requires some preprocessing for flextable. We can use `align_chr` to align by the first decimal. However, we need to prevent additional spaces to be added to the right side of the first decimals, to prevent strange formatting side effects after applying `hanging_indent`. So we specify `side = left` to add additional figures spaces on the left side only. 

The `colformat_md` function automatically formats text to markdown. Unfortunately, the PCAT items look like ordered lists to the markdown parser. To prevent this conversion, we insert a non-breaking space (`&nbsp;`) after the first decimal.

The factor loadings need to be bolded selectively (if > .3). The `flextable::bold` function is great for selective bolding. However, the loadings are not really numbers by the time they get to flextable (i.e., they have text minus signs, figure spaces, and leading zeroes removed), which makes conditional processing tricky. It was easier to preprocess the loadings, selectively surrounding them with markdown bold tags with `bold_md`.

```{r}
#| label: tbl-714
#| tbl-cap: Results From a Factor Analysis of the Parental Care and Tenderness (PCAT) Questionnaire
#| apa-note: "*N*&nbsp;=&nbsp;307. The extraction method was principal axis factoring with an oblique (promax with Kaiser Normalization) rotation. Factor loadings above .30 are in bold. Reverse-scored items are denoted with (R). Adapted from “Individual Differences in Activation of the Parental Care Motivational System: Assessment, Prediction, and Implications,” by E. E. Buckels, A. T. Beall, M. K. Hofer, E. Y. Lin, Z. Zhou, and M. Schaller, 2015, *Journal of Personality and Social Psychology, 108*(3), p. 501 ([https://doi.org/10.1037/pspp0000023](https://doi.org/10.1037/pspp0000023)). Copyright 2015 by the American Psychological Association."

# Make data
d <- tibble(
       Factor = c("Factor 1: Tenderness--Positive",
                  "Factor 1: Tenderness--Positive","Factor 1: Tenderness--Positive",
                  "Factor 1: Tenderness--Positive",
                  "Factor 1: Tenderness--Positive","Factor 2: Liking","Factor 2: Liking",
                  "Factor 2: Liking","Factor 2: Liking","Factor 2: Liking",
                  "Factor 3: Protection","Factor 3: Protection","Factor 3: Protection",
                  "Factor 3: Protection","Factor 3: Protection"),
    `PCAT Item` = c("20. You make a baby lagh over and over again by making silly faces.",
                  "22. A child blows you kisses to say goodbye.",
                  "16. A newborn baby curls its hand around your finger.",
                  "19. You watch as a toddler takes their first step and tumboles gently back down.",
                  "25. You see a father tossing his giggling baby up into the air as a game.",
                  "5. I think that kids are annoying. (R)",
                  "8. I can't stand how children whine all the time. (R)",
                  "2. When I hear a child crying, my first thought is \"shut up!\" (R)",
                  "11. I don't like to be around babies. (R)",
                  "14. If I could, I would hire a nanny to take care of my children. (R)",
                  "7. I would hurt anyone who was a threat to a child.",
                  "12. I would show no mercy to someone who was a danger to a child.",
                  "15. I would use any means necessary to protect a child, even if I had to hurt others.",
                  "4. I would feel compelled to punish anyone who tried to hurt a child.",
                  "9. I would sooner go to bed hungry than let a child go without food."),
    `Factor loading_1` = c(
      0.86, 0.85, 0.84, 0.77, 0.7, -0.01, -0.12,
      0.04, 0.11, 0.08, -0.13, 0.0, 0.06, 0.07, 0.46),
    `Factor loading_2` = c(
      0.04, -0.02, -0.06, 0.05, 0.1, 0.95, 0.83,
      0.72, 0.7, 0.58, -0.02, -0.05, 0.08, 0.03, -0.03),
    `Factor loading_3` = c(
      0.01, -0.01, 0, -0.07, -0.03, 0.06, -0.03,
      0.01, -0.01, -0.02, 0.95, 0.74, 0.72, 0.68, 0.36)
) 

# Format data
d <- d |> 
  mutate(`PCAT Item` = align_chr(`PCAT Item`, side = "left") |> 
           hanging_indent(width = 75, indent = 6) |> 
           str_replace("\\. ", ".&nbsp;"))  |>  
    mutate(
    across(
      starts_with("Factor loading"), 
      \(x) {
        y <- align_chr(x, trim_leading_zeros = TRUE)
        ifelse(abs(x) > .3, bold_md(y), y)
        }
      )
    )

# Make table
d |> 
  apa_flextable(row_title_column = "Factor", 
                row_title_align = "left", 
                table_width = 1, 
                line_spacing = 1.5) |> 
  align(j = 1, align = "left") 

```

<hr>

## APA Table 7.15

![Screenshot of the *APA Manual*'s Table 7.15](table715.png){#fig-715 width="100%"}

I love the easystats ecosystem. It provides a coherent framework for  data-analyst to process and display statistical analyses. It makes so many previously tedious things simple. It was not designed for the final display of APA tables, however. The apa7 package has a few functions and features that help process the output of easystats functions to make them table-ready.

First, lets simulate some data that resembles the data underlying the models in @fig-715, and create regression models for Models 1 and 2.

```{r}
#| label: make715
set.seed(1)
# sample size
n <- 88

# simulated data
d <- tibble(
  leader_gender = sample(0:1, n, replace = TRUE),
  leader_sleep_condition = sample(0:1, 88, replace = TRUE),
  charisma = 2.76 - .09 * leader_gender - .36 * leader_sleep_condition + rnorm(n, sd = 0.5))

# Models 1 and 2
m1 <- lm(charisma ~ leader_gender, data = d)
m2 <- lm(charisma ~ leader_gender + leader_sleep_condition, data = d)
```

The `parameters::parameters` function from easystats ecosystem displays information about regression predictors.

```{r}
#| label: parametersm2
parameters(m2) 
```

That is a really nice display. However, if we convert it directly to flextable, we get something far less polished.

```{r}
#| label: parametersm2flextable
parameters(m2) |> 
  flextable()
```


As it turns out, the output of the `parameters` function undergoes a fair bit of processing before it prints. The output is a `data.frame` with a `parameters_model` class  and many attributes that can be used by the easystats formatting functions. If we want to see the underlying data, we can convert the output to a `data.frame` or `tibble`.

```{r}
#| label: parametersm2tibble
parameters(m2) |> 
  as_tibble()
  
```

If we really want just the output of `parameter` as it displays, we use the `format_table` function.

```{r}
#| label: parametersm2format
parameters(m2, ci = .95) |> 
  insight::format_table() |> 
  apa_flextable()
```

This gets us closer to APA style, but not quite all way there. Notice that the output is all text. We would like things to be nearly automatic and yet be able to fine-tune the output. Behold!

```{r}
#| label: apaparamtersm2
apa_parameters(m2)
```

The `apa_parameters` function is a wrapper around the `parameters` function with defaults that produce APA style output via markdown syntax. The columns are decimal aligned, statistics are italicized, the intercept is called a "Constant", and the variable names are printed in title case. 
Applying `apa_flextable` to the output gives us perfect APA style:

```{r}
#| label: apaparamtersm2flextable
apa_parameters(m2) |> 
  apa_flextable() 
```

Suppose the default formatting is not quite right. The `apa_parameters` function makes use of the default output of `column_formats` function to make its changes. 

The current parameter formatter is available for inspection like so:

```{r}
#| label: column_formats
column_formats()
```

When printed, this object looks like a tibble, but it is actually a specialized object that contains formatting instructions for the headers and a formatting function for the columns under those headers.

We can save these defaults to an object and take a look inside.

```{r}
#| label: myformats
my_formats <- column_formats()
```

This object has various properties accessible with `@` 

```{r}
#| label: myformatsproperties
my_formats@accuracy
my_formats@intercept_text
my_formats@get_headers
my_formats@get_latex
```

The properties starting with `get_` are read-only. The others can be set. Suppose I want the default accuracy of the column formatter functions to be .001 instead of .01:

```{r}
#| label: myformatsaccuracy
my_formats@accuracy <- .001
```


The columns are a list with specific columns accessible with the `$` operator or `[` or `[[`:

```{r}
#| label: myformatscolumns
# Returns a named list of column_formats
my_formats[c("R2", "eta2")]
# Returns a single column_format
my_formats[["R2"]]
my_formats$R2
```

In this case, `Coefficient` is an `column_format` object, which has 4 properties, `@name`, `@header`, `@latex`, and `@formatter`.

```{r}
#| label: myformatscoefficient
my_formats$Coefficient@name
my_formats$Coefficient@header
my_formats$Coefficient@latex
my_formats$Coefficient@formatter
```

Here we set the formats something other than the defaults.

```{r}
#| label: myformatsset
my_formats$Coefficient@header <- "*b*"
my_formats$SE@header <- "*se~b~*"
my_formats$Std_Coefficient@formatter <- \(x) {
  align_chr(x, accuracy = .01, trim_leading_zeros = TRUE)
}

apa_parameters(m2, column_formats = my_formats) |>
  apa_flextable()
```

If we want this to be the new within-session default, we can set it like so:

```{r}
#| label: myformatssetdefault
apa7_defaults(column_formats = my_formats, accuracy = .001)
```

Now the new defaults need not be specified each time:

```{r}
#| label: apa_parametersflextable
apa_parameters(m2) |> 
  apa_flextable()
```

The "default" defaults can be reset like so:

```{r}
#| label: apa7defaultsreset
apa7_defaults(reset = TRUE)
```

Thus, the columns are back to what they were before:

```{r}
#| label: apa_parametersflextable2
apa_parameters(m2) |> 
  apa_flextable()
```


The `apa_format_columns` function and a few others like `apa_parameters`, `apa_performance`, and `apa_compare_performance` can process tables with 

```{r}
#| label: tbl-715
#| tbl-cap: Regression Coefficients of Leader Sleep on Charismatic Leadership

pf <- column_formats()
pf$SE@header <- "*SE*"

m <- list(`Model 1` = m1, 
          `Model 2` = m2) 

d_parameters <- apa_parameters(
  m, 
  predictor_parameters = c("Coefficient", "Std_Coefficient", "SE"), 
  column_formats = pf)

d_performance <- apa_performance_comparison(
  m,
  metrics = c("R2", "deltaR2"),
  starred = "deltaR2") |> 
  pivot_longer(-Model, names_to = "Variable") |> 
  mutate(Model = paste0(Model, "_&beta;")) |> 
  pivot_wider(names_from = Model)

d_parameters |> 
  pivot_wider_name_value(
    id_cols = Variable, 
    names_from = Model, 
    values_from = 3:5) |> 
  mutate(Variable = str_to_sentence(Variable)) |>
  add_row(d_performance) |>
  mutate(across(-Variable, \(x) align_chr(
    x,
    center = "\\.", 
    side = "left",
    NA_value = "") |> 
      star_balance())) |> 
  add_break_columns(`Model 2_*B*`, .before = T) |> 
  apa_flextable(table_width = 1) |> 
  colformat_md(part = "all") |>
  align(j = 1, align = "left") |> 
  flextable::add_footer_lines(values = as_paragraph_md("*Note*. *N*&nbsp;=&nbsp;88. We examined the impact of leader sleep condition (control vs. sleep deprived) on ratings of charismatic leadership. In Models 1 and 2, we entered the control variable of leader gender to predict leader charisma.")) |> 
  footnote(i = 2, 
           j = 1, 
           value = as_paragraph("Male = 1, female = 2. "), 
           ref_symbols = "a ") |>
    footnote(i = 3, 
             j = 1, 
             value = as_paragraph(
               "Control condition = 0, sleep-deprived condition = 1"), 
             ref_symbols = "b ", 
             inline = T, 
             sep = ".") |> 
  add_footer_lines(
    values = as_paragraph_md("\\* *p* < .05. \\*\\* *p* < .01."))
```

<hr>

## APA Table 7.16

:::{.callout-note}
# Highlights

* Two levels of grouping with `flextable::as_grouped_data`

:::

![Screenshot of the *APA Manual*'s Table 7.16](table716.png){#fig-716 width="100%"}

```{r}
#| label: tbl-716
#| tbl-cap: "Regressions of Associations Between Marital 
#|           Satisfaction and Average Levels of Marital Behavior"
#| apa-note: "CI&nbsp;=&nbsp;confidence interval; H → H&nbsp;=&nbsp;husband-as-actor 
#|           effect on the husband’s own marital satisfaction; 
#|           W → W&nbsp;=&nbsp;wife-as-actor effect on the wife's own marital 
#|           satisfaction; W → H&nbsp;=&nbsp;wife-as-partner effect on the 
#|           husband’s satisfaction; H → W&nbsp;=&nbsp;husband-as-partner 
#|           effect on the wife's satisfaction."
#| echo: fenced
set.seed(123)
# Make Coefficients
d_coefficients <- tibble::tribble(
        ~Dependent,    ~Group, ~Predictor,     ~b,
  "Angry Behavior",   "Actor",       "H_H",  -98.9,
  "Angry Behavior",   "Actor",       "W_W", -87.11,
  "Angry Behavior", "Partner",       "W_H", -76.18,
  "Angry Behavior", "Partner",       "H_W",  -91.8,
       "Disregard",   "Actor",       "H_H", -38.62,
       "Disregard",   "Actor",       "W_W", -47.54,
       "Disregard", "Partner",       "W_H", -82.81,
       "Disregard", "Partner",       "H_W", -79.36,
      "Distancing",   "Actor",       "H_H", -47.42,
      "Distancing",   "Actor",       "W_W",   3.04,
      "Distancing", "Partner",       "W_H",  -0.05,
      "Distancing", "Partner",       "H_W",  -53.5
  ) 

# Make Model
model <- d_coefficients |> 
  mutate(b = b / 100) |>
  unite(Predictor, c(Group, Predictor)) |> 
  mutate(across(c(Dependent, Predictor), snakecase::to_snake_case)) |> 
  unite(b, c(b, Predictor), sep = " * ") |> 
  summarise(b = paste(b, collapse = " + "), .by = Dependent) |> 
  unite(Model, c(Dependent, b), sep = " ~ ") |> 
  pull(Model) 

# Make data
d <- lavaan::simulateData(model, sample.nobs = 50) |> 
  as_tibble() |> 
  mutate(id = row_number(), .before = 0) |> 
  pivot_longer(angry_behavior:distancing, 
               values_to = "y", names_to = "Dependent") |> 
  mutate(y = y  * 100) |> 
  nest(data = -Dependent)


# Analyze data
d <- d |> 
  mutate(
    fit = map(data, \(d) {
      lm(y ~ ., data = d |> select(-id))
      }),
    tbl = map(fit, parameters::parameters))
  
# Format data
d <- d |> 
  select(Dependent, tbl) |> 
  unnest(tbl) |> 
  apa_format_columns() |> 
  filter(Variable != "Constant") |> 
  separate(Variable, c("Type", "i", "d")) |> 
  mutate(across(c(i,d), toupper)) |> 
  unite(Variable, c(i, d), sep = c(" \u2192 ")) |> 
  relocate(`95% CI`, .after = last_col()) |> 
  as_grouped_data(groups = c("Dependent", "Type")) |> 
  mutate(across(c(Type, Variable), \(x) tidyr::replace_na(x, ""))) |> 
  mutate(Variable = paste0(Type, Variable, recycle0 = TRUE),
         Dependent = snakecase::to_sentence_case(Dependent)) |> 
  fill(Dependent) |> 
  filter(Variable != "") |> 
  select(-Type)

# Make Table
d |> 
  apa_flextable(row_title_column = "Dependent", 
                layout = "fixed",
                line_spacing = 1.5) |> 
  padding(j = 1, 
          i = ~`*B*` != "", 
          padding.left = 20) |> 
  width(width = c(1.1, rep(.85, 4), 2)) 
```

<hr>

## APA Table 7.17

:::{.callout-note}
# Highlights

* Confidence intervals in two columns

:::

![Screenshot of the *APA Manual*'s Table 7.17](table717.png){#fig-717 width="100%"}

```{r}
#| label: tbl-717
#| tbl-cap: "Moderator Analysis: Types of Measurement and Study Year"
#| apa-note: 
#|   - "Number of studies&nbsp;=&nbsp;120, number of
#|     effects&nbsp;=&nbsp;782, total 
#|     *N*&nbsp;=&nbsp;52,578. CI&nbsp;=&nbsp;confidence 
#|     interval; *LL*&nbsp;=&nbsp;lower limit; 
#|     *UL*&nbsp;=&nbsp;upper limit."
#|   - "^a&nbsp;^0&nbsp;=&nbsp;self-report, 
#|     1&nbsp;=&nbsp;test. ^b&nbsp;^ 0&nbsp;= test, 
#|     1&nbsp;=&nbsp;grade point average. ^c&nbsp;^Study 
#|     year was grand centered. ^d&nbsp;^0&nbsp;=&nbsp;other, 
#|     1&nbsp;=&nbsp;yes. ^e&nbsp;^0&nbsp;= no, 
#|     1&nbsp;=&nbsp;yes."
#| echo: fenced



# Make data
d <- tibble(
  effect_type = c(
    "Fixed effects",
    "Fixed effects",
    "Fixed effects",
    "Fixed effects",
    "Fixed effects",
    "Fixed effects",
    "Random effects",
    "Random effects"
  ),
  Effect = c(
    "Intercept",
    "Creativity measurement^&thinsp;a^",
    "Academic achievement measurement^&thinsp;b^",
    "Study year^&thinsp;c^",
    "Goal^&thinsp;d^",
    "Published^&thinsp;e^",
    "Within-study variance",
    "Between-study variance"
  ),
  Estimate = c(0.119, 0.097, -0.039, 2e-04, 
               -0.003, 0.054, 0.009, 0.018),
  SE = c(0.04, 0.028, 0.018, 0.001, 
         0.029, 0.03, 0.001, 0.003),
  `95% CI_*LL*` = c(0.041, 0.042, -0.074, -0.001, 
                    -0.06, -0.005, 0.008, 0.012),
  `95% CI_*UL*` = c(0.198, 0.153, -0.004, 0.002, 
                    0.054, 0.114, 0.011, 0.023),
  p = c(0.003, 0.001, 0.03, 0.76, 
        0.91, 0.07, 9e-04, 9e-04)
) 

# Format data
d <- d |> 
  mutate(Estimate = align_chr(
    Estimate, 
    accuracy = .0001, 
    drop0trailing = TRUE, 
    trim_leading_zeros = TRUE)) |> 
  mutate(across(c(Estimate:`95% CI_*UL*`), \(x) {
    align_chr(x, 
              accuracy = .001, 
              trim_leading_zeros = TRUE)
  })) |>
  mutate(Effect = hanging_indent(Effect, width = 35)) |>
  apa_format_columns()

# Make table
d |> 
  apa_flextable(row_title_column = "effect_type",
                layout = "fixed") |> 
  align(j = 1) |> 
  padding(j = 1, 
          padding.left = c(0, 
                           15, 
                           rep(30, 5), 
                           0, 
                           rep(15, 2))) |> 
  width(width = c(2.5, rep(.8, 5)))


```


## APA Table 7.18

:::{.callout-note}
# Highlights

* Two levels of grouping with `flextable::as_grouped_data`

:::

![Screenshot of the *APA Manual*'s Table 7.18](table718.png){#fig-718 width="100%"}

```{r}
#| label: tbl-718
#| tbl-cap: "Hierarchical Regression: Results for Well-Being"
#| echo: fenced
#| apa-note: 
#|   - "CI = confidence interval; *LL*&nbsp;=&nbsp;lower limit; 
#|   *UL*&nbsp;=&nbsp;upper limit; familismo = the collective 
#|   importance of family unity that emphasizes interdependence
#|   and solidarity; Mex Am margin&nbsp;=&nbsp;Mexican 
#|   American marginalization."
#|   - "^\\*^*p* < .05. ^\\*\\*^*p* < .01. ^\\*\\*\\*^*p* < .001."
set.seed(7)
# Make coefficients
d_coefficients <- tibble::tribble(
  ~Step,                ~Variable, ~beta,    ~b,
     1L, "Perceived social class",  0.31,  0.45,
     1L,       "Generation level", -0.01, -0.01,
     2L,              "Familismo",  0.23,  0.37,
     2L,          "Acculturation",  0.05,  0.11,
     2L,          "Enculturation",  0.24,  0.35,
     2L,        "Mex {Am} margin", -0.17, -0.23,
     3L,   "Masculinity ideology", -0.18, -0.05
  ) |> 
  mutate(vname = snakecase::to_any_case(
    Variable, 
    case = "parsed") |> fct_inorder(),
    Variable = fct_inorder(Variable))

# Make data
d <- d_coefficients |> 
  unite(vname, c(beta, vname), 
        sep = " * ") |> 
  pull(vname) |> 
  paste(collapse = " + ") |> 
  {
    \(x) paste0("y ~ ", x)
    }() |> 
  lavaan::simulateData(standardized = TRUE, sample.nobs = 200) |> 
  mutate(y = y + 4) |> 
  as_tibble()

# Rescale data
for (i in seq_len(nrow(d_coefficients))) {
  d[,d_coefficients[i,]$vname] <- d[,d_coefficients[i,]$vname] * 
    d_coefficients[i,]$beta / 
    d_coefficients[i,]$beta
}

# Analyze data
d_analysis <- d_coefficients |>
  select(Step, vname) |>
  crossing(Model = 1:3) |>
  arrange(Model, Step) |>
  filter(Step <= Model) |>
  select(-Step) |>
  summarise(f = paste0(vname, collapse = " + "), 
            .by = Model) |>
  mutate(
    eq = paste0("y ~ ", f) |> map(formula),
    fit = map(eq, lm, data = d),
    Model = paste("Model", Model)
  )

# Format data
d <- d_analysis |>
  mutate(
    parameters = map(fit, model_parameters),
    std_parameters = map(fit, 
                         model_parameters, 
                         standardize  = "basic") |> 
      map(\(d) select(d, Std_Coefficient))
  ) |>
  select(Model, parameters, std_parameters) |>
  unnest(c(parameters, std_parameters)) |>
  select(-CI, -t, -df_error) |>
  rename(pp = p) |>
  relocate(SE, .before = Std_Coefficient) |>
  apa_format_columns() |>
  rename(`95% CI for *B*_*LL*` = LL,
         `95% CI for *B*_*UL*` = UL) |>
  as_grouped_data("Model") |>
  left_join(
    d_analysis |>
      pull(fit) |>
      apa_performance_comparison(
        starred = "deltaR2", 
        metrics = c("R2", "deltaR2")),
    by = join_by(Model)
  ) |>
  tidyr::replace_na(list(Model = "", Variable = "")) |>
  unite(Variable, c(Variable, Model), sep = "") |>
  mutate(
    papa7starcolumn = p2stars(pp, superscript = TRUE),
    p2apa7starcolumn = papa7starcolumn,
    .after = `*B*`
  ) |>
  relocate(p2apa7starcolumn, .after = `&beta;`) |>
  select(-pp) |>
  mutate(Variable = str_replace(Variable, "^Model", "Step") |> 
           snakecase::to_sentence_case() |> 
           str_replace(" am ", " Am ")) 

# Make table
d |> 
  apa_flextable(line_spacing = 1.5, 
                layout = "fixed") |>
  padding(i = ~!is.na(`*B*`), 
          j = 1, 
          padding.left = 15) |>
  surround(i = ~is.na(`*B*`), 
           border.top = fp_border_default(color = "gray30")) |> 
  width(width = 6.5 * c(3, .6, .4, 1, 1, 1, 
                           .6, .4, 1, 1) / 10)
  

```

<hr>

## APA Table 7.19


![Screenshot of the *APA Manual*'s Table 7.19](table719.png){#fig-719 width="100%"}

In the recreated table, the hanging indent for *Modified latent change* was omitted because the text is shorter than *Simplex contemporaneous*, which does not have a hanging indent.

```{r}
#| label: tbl-719
#| tbl-cap: "Comparison of Fit Indices in Models Fitted to Simulated Data Across Longitudinal Mediation Model Types"
#| echo: fenced
#| apa-note: "AIC and BIC differences are relative to the simplex 
#|   lagged model. RMSEA&nbsp;=&nbsp;root-mean-square error of 
#|   approximation; CI&nbsp;=&nbsp;confidence interval; 
#|   AIC&nbsp;=&nbsp;Akaike information criterion; 
#|   BIC&nbsp;=&nbsp;Bayesian information criterion."
tibble(
             Model = c("Simplex lagged",
                       "Simplex contemporaneous",
                       "Latent growth",
                       "Modified latent change"),
  `&chi;^2^_Value` = c(63.3, 58, 65, 26.2),
     `&chi;^2^_df` = c(28L, 29L, 33L, 33L),
      `&chi;^2^_p` = c(1e-04, 0.001, 1e-04, 0.79),
       RMSEA_Value = c(0.044, 0.04, 0.039, 0),
    `RMSEA_95% CI` = c("[.030, .059]", "[.024, .054]",
                       "[.025, .053]", "[.000, .020]"),
           RMSEA_p = c(0.72, 0.87, 0.9, 0.999),
               AIC = c(13479, 13472, 13471, 13432),
               BIC = c(13658, 13646, 13627, 13588),
      `deltaAIC` = c(NA, -7L, -8L, -47L),
      `deltaBIC` = c(NA, -12L, -31L, -70L)
) |> 
  add_break_columns(RMSEA_Value, .before = TRUE) |> 
  mutate(RMSEA_Value = align_chr(
    RMSEA_Value, 
    accuracy = .001, 
    trim_leading_zeros = TRUE)) |> 
  apa_flextable(markdown_body = TRUE,
                layout = "fixed", 
                font_size = 11) |> 
  width(width = c(1.80, .45, .35, .45, .05, .40, 
                   .85, .35, .50, .50, .40, .40)) 
```

<hr>

## APA Table 7.20


![Screenshot of the *APA Manual*'s Table 7.20](table720.png){#fig-720 width="100%"}


### Level 1

$$
\begin{aligned}
Y_{ij} &= b_{0j} + b_{1j}Time_{ij} + b_{2j}Time_{ij}^2 + e_{ij}\\
e_{ij}&\sim\mathcal{N}\left(0,\tau_1\right)
\end{aligned}
$$

### Level 2

$$
\begin{aligned}
b_{0j} &= b_{00}+b_{01}PBS_j+b_{02}SFB_j+e_{0j}\\
b_{1j} &= b_{10}+b_{11}PBS_j+b_{12}SFB_j+e_{1j}\\
b_{2j} &= b_{20}+b_{21}PBS_j+b_{22}SFB_j+e_{2j}\\
e_2&=\begin{bmatrix}
e_{0j}\\
e_{1j}\\
e_{2j}
\end{bmatrix}\\
\tau_2&=\begin{bmatrix}
\tau_{00}&0&0\\
0&\tau_{11}&0\\
0&0&\tau_{22}\\
\end{bmatrix}\\
e_2&\sim\mathcal{N}\left(0,\tau_2\right)
\end{aligned}
$$

```{r}
#| label: tbl-720
#| tbl-cap: Model Parameters and Goodness of Fit for Linear and Quadratic Changes in Emotions by Behavior Type
#| warning: false
#| apa-note: 
#|   - "Standard errors are in parentheses. All p values in this table are two tailed. In Model 1 (unconditional quadratic growth), the intercept parameter estimate (γ~00~) represents the average positive or negative emotions score at posttest across the sample. In Model 2 (prosocial and self-focused behavior vs. control), the intercept parameter estimate (γ~00~) represents the average positive or negative emotions score in the control condition at posttest, γ~02~ represents the difference at posttest between the prosocial behavior conditions and the control condition, and γ~03~ represents the difference at posttest between the self-focused behavior condition and the control condition. γ~10~ represents the average linear rate of change in the control condition, γ11 represents additional effects of prosocial behavior on linear rate of change, and γ~12~ represents additional effects of self-focused behavior on linear rate of change. Finally, γ~20~ represents the average quadratic rate of change in the control condition, γ~21~ represents additional effects of prosocial behavior on quadratic rate of change, and γ~22~ represents additional effects of self-focused behavior on quadratic rate of change. In all models, the intercept, linear slope (time), and quadratic slope (time2) were free to vary."
#|   - "^\\*&nbsp;^*p* < .05. ^\\*\\*&nbsp;^*p* < .01. ^\\*\\*\\*&nbsp;^*p* < .001."
set.seed(123)
# Number of people
n_2 <- 400
# Number of time points
n_1 <- 15

d_parameter <- tibble::tibble(
  symbol = c(
    "b_00", "b_01", "b_02",
    "b_10", "b_11", "b_12",
    "b_20", "b_21", "b_22",
    "s_e", "s_0", "s_1", "s_2"),
  Positive = c(
    3.34, 0.39, 0.26, -0.002, -0.06, 0.001,
    -0.001, -0.03, -0.01, 0.52, 1.31, 0.04, 0.03),
  Negative = c(
    1.82, -0.36, -0.16, 0.01, 0.02, -0.04, 0.02, 
    0.01, -0.01, 0.51, 1, 0.02, 0.02),
  Parameter = c(
     "(Intercept)",
     "PBS",
     "SFB",
     "Time",
     "PBS:Time",
     "Time:SFB",
     "I(Time^2)",
     "PBS:I(Time^2)",
     "I(Time^2):SFB",
     "SD (Observations)",
     "SD (Intercept)",
     "SD (Time)", 
     "SD (I(Time^2))"),
  pname = c(
    "Intercept",
    "Prosocial behavior",
    "Self-focused behavior",
    "Time",
    "Prosocial behavior", 
    "Self-focused behavior",
    "Time^2",
    "Prosocial behavior", 
    "Self-focused behavior",
    "Level 1",
    "Level 2",
    "Level 2",
    "Level 2"),
  l2 = c(
    rep("Status at postest, &pi;~0j~", 3),
    rep("Linear rate of change, &pi;~1j~", 3),
    rep("Quadratic rate of change, &pi;~2j~", 3),
    rep("Variance components", 4)),
  effecttype = c(
    rep("Fixed", 9),
    rep("Random", 4))
) |> 
  mutate(symbol = fct_inorder(symbol),
         pname = fct_inorder(pname))

# Level 1 variances
tau_1 <- d_parameter |> 
  filter(symbol == "s_e") |> 
  select(symbol, Positive, Negative) |>
  pivot_longer(-symbol) |> 
  select(name, value) |> 
  deframe()

# Level 2 variances
tau_2 <- d_parameter |> 
  filter(str_starts(symbol, "s_")) |> 
  filter(symbol != "s_e") |> 
  select(symbol, Positive, Negative) |>
  pivot_longer(-symbol) |>
  select(-symbol) |> 
  nest(value = -name) |> 
  mutate(value = map(
    value, 
    \(x) diag(unlist(x)))) |>
  deframe()

# Fixed effects
d_parameter_fixed <- d_parameter |> 
  filter(effecttype == "Fixed") |> 
  select(symbol, Positive, Negative) |> 
  pivot_longer(-symbol, 
               names_to = "dv", 
               values_to = "b") |>
  pivot_wider(names_from = symbol, 
              values_from = b)

# Level 2 simulated data
d_2 <- tibble(
  id = seq_len(n_2),
  Intercept = 1,
  PBS = rnorm(n_2),
  SFB = rnorm(n_2)
) |> 
  crossing(
    dv = fct_inorder(c("Positive", 
                       "Negative"))) |> 
  nest(data = -dv) |> 
    mutate(
      tau_2 = tau_2, 
      e_2 = map(
        tau_2, 
        \(x) {
          mvtnorm::rmvnorm(
            n = n_2, 
            mean = c(
              e_0j = 0, 
              e_1j = 0, 
              e_2j = 0), 
            sigma = x) |> 
            as_tibble()
        })) |> 
    select(-tau_2) |> 
    unnest(c(data, e_2)) |> 
  left_join(d_parameter_fixed, by = join_by(dv)) |> 
  mutate(b_0j = b_00 + b_01 * PBS + b_02 * SFB + e_0j,
         b_1j = b_10 + b_11 * PBS + b_12 * SFB + e_1j,
         b_2j = b_20 + b_21 * PBS + b_22 * SFB + e_2j)

# Level 1 simulated data
d_1 <- d_2 |> 
  crossing(
    Time = seq(0, n_1 - 1)
  ) |> 
  nest(data = -dv) |> 
  mutate(tau_1 = tau_1,
         e_ij = map2(tau_1, data, \(tau, d) {
           rnorm(nrow(d), sd = sqrt(tau))
           })) |> 
  unnest(c(data, e_ij)) |>
  mutate(
    y = b_0j + b_1j * Time + b_2j * Time^2 + e_ij) |> 
  select(dv, id, PBS, SFB, Time, y) 

# Analyze data
fit <- d_1 |> 
  nest(data = -dv) |> 
  mutate(
    `Model 1` = map(
      data, 
      \(d) {
        lmer(y ~ 1 + Time + I(Time^2) + 
               (1 + Time + I(Time^2) || id), 
             data = d)
      }),
    `Model 2` = map(
      data, 
      \(d) {
        lmer(y ~ 1 + PBS * Time + PBS * I(Time^2) + 
               SFB * Time + SFB * I(Time^2) + 
               (1 + Time + I(Time^2) || id), 
             data = d)
        })
      ) |> 
  select(-data) |> 
  pivot_longer(-c(dv), 
               names_to = "Model", 
               values_to = "fit") |> 
  mutate(
    parameters = map(
      fit, parameters::parameters, 
      include_sigma = TRUE))

# Peformance statistics
d_performance <- fit |> 
  select(dv, fit) |> 
  summarise(fit = list(fit), .by = dv) |> 
  mutate(p = map(fit, \(f1) {
    anova(f1[[1]], f1[[2]]) |> 
      as_tibble() |> 
      rename(Deviance = `-2*log(L)`, 
             deltachi2 = Chisq,
             df_diff = Df,
             p = `Pr(>Chisq)`) |> 
      mutate(Model = paste0("Model ", 1:2),
             chistar = p2stars(p),
             Deviance = align_chr(Deviance)) |> 
      select(
        Model, 
        Deviance, 
        deltachi2, 
        df_diff, 
        chistar) |> 
      apa_format_columns() |> 
      unite(`&Delta;&chi;^2^`, 
            `&Delta;&chi;^2^`, 
            chistar, 
            sep = "")
    })) |> 
  select(-fit) |> 
  arrange(desc(dv)) |> 
  unnest(p) |> 
  mutate(dv = paste0(dv, " emotions")) |>
  unite(dv, c(dv, Model)) |> 
  mutate(dv = fct_inorder(dv)) |> 
  pivot_longer(-dv, names_to = "Effect") |> 
  pivot_wider(names_from = dv) |> 
  mutate(effecttype = "Goodness of fit") |> 
  suppressMessages()
  
# Format data
d <- fit |> 
  unnest(parameters) |> 
  select(dv, Model, Parameter, Coefficient, SE, p) |> 
  mutate(stars = p2stars(p, superscript = TRUE),
         Coefficient = paste0(signs::signs(Coefficient, 
                                    accuracy = .01), 
                              stars),
         SE = align_chr(SE, 
                                    accuracy = .01) |> 
           tagger(" (", ")"), 
         b = paste0(Coefficient, SE),
         dv = fct_inorder(paste(dv, "emotions"))) |> 
  select(dv, Model, Parameter, b) |> 
  unite(dv, c(dv, Model)) |> 
  pivot_wider(names_from = dv, values_from = b) |> 
  left_join(
    d_parameter |> 
      select(Parameter, 
             symbol, 
             pname, 
             l2, 
             effecttype), 
    by = join_by(Parameter)) |> 
  arrange(symbol) |> 
  rename(Effect = pname) |> 
  select(-Parameter) |> 
  relocate(Effect, symbol, .before = 0) |> 
  mutate(symbol = as.character(symbol) |> 
           str_replace_all(
             c(`s_` = "&sigma;~",
               `b_` = "&gamma;~")) |> 
           paste0("~", ifelse(
             str_detect(symbol, "^s"), 
             "^2^", 
             ""))) |> 
  mutate(Effect = as.character(Effect)) |> 
  mutate(across(-c(symbol, Effect), 
                \(x) str_trim(x))) |> 
  as_grouped_data(c("effecttype", "l2"))  |> 
  mutate(Effect = ifelse(is.na(l2), Effect, l2)) |> 
  select(-l2) |> 
  tidyr::fill(effecttype) |> 
  filter(!is.na(Effect))  |> 
  mutate(
    across(
      c(starts_with("Negative"),
        starts_with("Positive")), 
      \(x) {
        align_chr(str_trim(x), 
                      side = "left")
        })) |> 
  bind_rows(d_performance) |> 
  mutate(across(
    everything(), 
    \(x) replace_na(x, replace = ""))) |> 
  rename(`Parameter ` = symbol) |> 
  add_break_columns(`Negative emotions_Model 2`)

# Make table
d |> 
  apa_flextable(
    row_title_column = "effecttype", 
    font_size = 10, 
    line_spacing = 1.5, 
    layout = "fixed") |> 
  align(j = 1, i = ~is.na(row_title)) |> 
  padding(
    j = 1, 
    i = ~(is.na(row_title) & 
            `Parameter ` != ""), 
    padding.left = 15) |> 
  merge_v(j = "Effect") |> 
  width(width = c(1.75, .7, 1, 1, .05, 1, 1))
```

<hr>

## APA Table 7.21

I did not have enough information to simulate the three models, so I input the data directly. This made it comparatively easy to recreate. Adding the star column by the $\chi^2$ column

![Screenshot of the *APA Manual*'s Table 7.20](table721.png){#fig-721 width="100%"}

```{r}
#| label: tbl-721
#| tbl-cap: "Results of Confirmatory Factor Analysis for the 
#|   Relationships Among Three Types of Intelligence"
#| echo: fenced
#| apa-note: 
#|   - "Structural equation modeling was used for the analysis. 
#|     NFI&nbsp;=&nbsp;normed fit index; 
#|     CFI&nbsp;=&nbsp;comparative fit index; 
#|     RMSEA&nbsp;=&nbsp;root-mean-square error of 
#|     approximation."
#|   - "^a&thinsp;^In Model A, all 57 items of social 
#|    intelligence, emotional intelligence, and cultural 
#|    intelligence were loaded onto one factor. ^b&thinsp;^ 
#|    In Model B, the 21 items of social intelligence were 
#|    loaded onto one factor, and the 16 items of emotional 
#|    intelligence and the 20 items of cultural intelligence 
#|    were loaded onto another factor. ^c&thinsp;^ In Model C, 
#|    the 21 items of social intelligence were loaded onto one 
#|    factor, the 16 items of emotional intelligence were 
#|    loaded onto a second factor, and the 20 items of 
#|    cultural intelligence were loaded onto a third factor."
#|   - "^\\*\\*\\*^*p* < .001."
tibble(
  Model = c(
    "A: One-intelligence model^&thinsp;a^",
    "B: Two-intelligences mode^&thinsp;b^",
    "C: Three-intelligences model^&thinsp;c^"),
  Chi2 = c(10994.664, 10091.236, 8640.066),
  df = c(1539L, 1538L, 1536L),
  NFI = c(0.296, 0.354, 0.447),
  CFI = c(0.326, 0.39, 0.494),
  RMSEA = c(0.115, 0.109, 0.1)
) |> 
  mutate(Chi2 = paste0(
    align_chr(Chi2, accuracy = 0.001), "^\\*\\*\\*^")) |>
  
  apa_flextable(column_formats = column_formats(
    accuracy = 0.001),
    layout = "fixed") |>
  width(width = c(2.15, 1.15, rep(3.2 / 4, 4)))

```

<hr>

## APA Table 7.22

This was relatively straightforward, except that I needed to play with the column widths and hanging indents until they fit in table 6.5 inches wide.

![Screenshot of the *APA Manual*'s Table 7.22](table722.png){#fig-722 width="100%"}

```{r}
#| label: tbl-722
#| tbl-cap: "Master Narrative Voices: Struggle and
#|           Success and Emancipation"
#| echo: fenced
tibble(
  theme = c(
    "Struggle and success",
    "Struggle and success",
    "Emancipation",
    "Emancipation"),
  `Discourse and dimension` = c(
    paste("Self actualization as a member of a larger",
          "gay community is the end goal of healthy sexual",
          "identity development or \"coming out\""),
    paste("Maintaining healthy sexual identity entails",
          "vigilance against internalization of",
          "societal discrimination"),
    paste("Open exploration of an individually fluid",
          "sexual self is the goal of healthy sexual",
          "identity development"),
    paste("Questioning discrete, monolithic categories of",
          "sexual identity")),
  `Example quote` = c(
    paste(
      "\"My path of gayness...going from denial to saying,",
      "'well, this is it,' and then the process of coming",
      "out, and the process of just sort of looking around",
      "and seeing, well where do I stand in the world? And",
      "sort of having, uh, political feelings.\"",
      "(Carl, age 50)"),
    paste("\"When I'm, like, thinking of criticisms of",
      "more mainstream gay culture, I try to...make sure",
      "it's coming from an appropriate place and not, like,",
      "a place of self loathing.\" (Patrick,age 20)"),
    paste("\"[For heterosexuals] the man penetrates the",
      "woman, whereas with gay people, I feel like there",
      "is this potential for really playing around with",
      "that model a lot, you know, and just experimenting",
      "and exploring.\" (Orion, age 31)"),
    paste("\"LGBTQI, you know, and added on so many letters.",
      "It does start to raise the question about what the",
      "terms mean and whether...any term can adequately be",
      "descriptive.\" (Bill, age 50 )"))
) |> 
  mutate(
    `Discourse and dimension` = hanging_indent(
      `Discourse and dimension`,
      width = 29, indent = 4),
        `Example quote` = hanging_indent(
      `Example quote`,
      width = 55, indent = 4)
    ) |> 
  apa_flextable(
    row_title_column = "theme", 
    row_title_align = "left",
    layout = "fixed",
    line_spacing = 1.5) |> 
  align() |> 
  width(width = c(2.5, 4)) 
```



<hr>

## APA Table 7.23

This was relatively straightforward, except that I needed to play with the column widths and hanging indents until they fit in table 6.5 inches wide.

![Screenshot of the *APA Manual*'s Table 7.23](table723.png){#fig-723 width="100%"}

```{r}
#| label: tbl-723
#| tbl-cap: "Reasons Why Individuals Chose to Watch
#|           the Royal Wedding (*N* = 45)"
#| echo: fenced

tibble(
   `Reason for interest` = c(
     "Royal family and its history",
     NA,
     "Fashion and pop culture",
     NA,
     "Fairy tales and love stories",
     NA,
     "To pass time/it was on TV",
     NA),
   `Example quote` = c(
     paste(
       "\"I love all things British. I studied abroad in",
       "the U.K. I also watched the weddings of Charles",
       "& Diana and Andrew & Fergie. I watched Diana's",
       "funeral. Watching William & Kate get married",
       "seemed like the natural thing to do.\""),
     paste(
       "\"I find the royal family and their practices",
       "and traditions fascinating. I'm a big fan of",
       "tradition in any capacity (graduation ceremonies,",
       "weddings, etc.) and enjoy watching traditions",
       "older than our country (the U.S.).\""),
     paste(
       "\"When big pop culture things happen, I tend to",
       "want to watch so I'm 'in on it.' Also, when I was",
       "little my mom made us get up to watch Princess",
       "Diana get married, so it felt a little like",
       "tradition. \""),
     paste(
       "\"I was curious. Wanted to see her dress and how",
       "the other people who attended dressed. Like pomp",
       "and ceremony. \""),
     paste(
       "\"I watched his mom and dad get married, watched",
       "him grow up. Plus I love a fairy tale that comes",
       "true. I believe in love and romance\""),
     paste(
       "\"I am a romantic and I think this is a great",
       "love story.\""),
     paste(
       "\"I was at the airport and it was broadcasting on",
       "TV when I was waiting for my flight.\""),
     paste("\"It was on CNN when I got up. \"")),
  `Frequency, *n* (%)` = c(
    "16 (35.6)",NA,
    "13 (28.9)",NA,
    "11 (24.4)",NA,
    "5 (11.1)",NA)
) |> 
  mutate(`Reason for interest` = hanging_indent(`Reason for interest`, width = 16),
         `Example quote` = hanging_indent(`Example quote`, width = 50),
         `Frequency, *n* (%)` = align_chr(`Frequency, *n* (%)`)) |> 
  apa_flextable(layout = "fixed", line_spacing = 1.5) |> 
  align(j = 1:2) |> 
  width(width = c(1.4, 3.8, 1.3)) 
```

<hr>

## APA Table 7.24

This was relatively straightforward, except that I needed to play with the column widths and hanging indents until they fit in table 6.5 inches wide.

![Screenshot of the *APA Manual*'s Table 7.24](table724.png){#fig-724 width="100%"}

```{r}
#| label: tbl-724
#| tbl-cap: "Integrated Results Matrix for the Effect of
#|           Topic Familiarity on Reliance on Author Expertise"
#| echo: fenced
#| apa-note: "We integrated quantitative data (whether
#|            students selected a card about nuclear power
#|            or about climate change) and qualitative data
#|            (interviews with students) to provide a more
#|            comprehensive description of students’ card
#|            selections between the two topics."

tibble(
  `Quantitative result` = c(
    paste("When the topic was more (climate change) and", 
          "cards were more relevant, participants placed", 
          "less value on author expertise."),
    paste("When the topic is less familiar (nuclear power)", 
          "and cards were more relevant, participants", 
          "placed more value on author expertise.")),
   `Qualitative result` = c(
     paste("When an assertion was considered to be more", 
          "familiar and to be general knowledge,", 
          "participants perceived less need to rely on", 
          "author expertise."),
     paste("When an assertion was considered to be less", 
          "familiar and not general knowledge,", 
          "participants perceived more need to rely on", 
          "offer as brief expertise author expertise.")),
  `Example quote` = c(
    paste("Participant 144: \"I feel that I know more", 
          "about climate, and there are several things", 
          "on climate cards that are obvious, and that", 
          "if I sort of know it already, then the source", 
          "is not so critical... whereas with nuclear", 
          "energy. I don't know so much, so then I may", 
          "be more interested in who says what.\""),
    paste("Participant 3: \"[Nuclear power], which I know", 
          "much, much less about, I would back up my", 
          "arguments more with what I trust from the", 
          "professors.\""))
) |> 
  mutate(
    `Quantitative result` = hanging_indent(
      `Quantitative result`, width = 22),
    `Qualitative result` = hanging_indent(
      `Qualitative result`, width = 22),
    `Example quote` = hanging_indent(
      `Example quote`, width = 29)) |>
  apa_flextable(layout = "fixed", line_spacing = 1.5) |>
  align() |>
  width(width = c(2,2,2.5))
  

```
